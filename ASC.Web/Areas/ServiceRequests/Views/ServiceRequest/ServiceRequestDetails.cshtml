@model ASC.Web.Areas.ServiceRequests.Models.ServiceRequestDetailViewModel
@using Microsoft.AspNetCore.Http
@using ASC.Models.BaseTypes
@inject IHttpContextAccessor userHttpContext

@{
    Layout = "_SecuredLayout";

}

@{
    // Compute Service Engineer and Status Disable logic
    string serviceEngineerDisabled = null;
    if (!userHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()))
    {
        serviceEngineerDisabled = "disabled";
    }
    string statusDisabled = null;
    if (!userHttpContext.HttpContext.User.IsInRole(Roles.Admin.ToString()) &&
        !userHttpContext.HttpContext.User.IsInRole(Roles.Engineer.ToString()))
    {
        statusDisabled = "disabled";
    }
    // Customer can update the status only if the original status is Customer pending approval.
    if (userHttpContext.HttpContext.User.IsInRole(Roles.User.ToString()) &&
    Model.UpdateServiceRequestViewModel.Status == Status.PendingCustomerApproval.ToString())
    {
        statusDisabled = null;
        ViewBag.Status = new List<string> { "Completed", "RequestForInformation" };
    }
}
<div class="row"></div>
<div class="row padding-top-20px">
    @* Details Section *@
    <div class="row z-depth-3">
        <div class="col s12 padding-0px">
            <div class="section white-text padding-left-10px blue-grey lighten-1">
                <h5>Service Request Details</h5>
            </div>
            <div class="divider"></div>
            <form asp-controller="ServiceRequest" asp-action="UpdateServiceRequestDetails" method="post" class="col s12">
                <input type="hidden" asp-for="UpdateServiceRequestViewModel.RowKey" />
                <input type="hidden" asp-for="UpdateServiceRequestViewModel.PartitionKey" />
                <input type="hidden" asp-for="UpdateServiceRequestViewModel.RequestedDate" />
                <div class="row">
                    <div class="input-field col s4">
                        <select asp-for="UpdateServiceRequestViewModel.VehicleName"
                                asp-items="@(new SelectList(ViewBag.VehicleNames,"RowKey","Name"))" class="" required="required" disabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="UpdateServiceRequestViewModel.VehicleName"></label>
                    </div>
                    <div class="input-field col s4">
                        <select asp-for="UpdateServiceRequestViewModel.VehicleType"
                                asp-items="@(new SelectList(ViewBag.VehicleTypes,"RowKey","Name"))" class="validate" required="required" disabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="UpdateServiceRequestViewModel.VehicleType"></label>
                    </div>
                    <div class="input-field col s4">
                        <input asp-for="UpdateServiceRequestViewModel.RequestedDate" type="text"
                               disabled="disabled" class="datepicker" />
                        <label asp-for="UpdateServiceRequestViewModel.RequestedDate"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s8">
                        <textarea asp-for="UpdateServiceRequestViewModel.RequestedServices" class="materialize-textarea validate"></textarea>
                        <label asp-for="UpdateServiceRequestViewModel.RequestedServices"></label>
                    </div>
                </div>
                <div class="row">
                    <div class="input-field col s4">
                        <select asp-for="UpdateServiceRequestViewModel.ServiceEngineer" asp-items="@(new SelectList(ViewBag.ServiceEngineers, "Email", "Email"))"
                                class="" required="required" disabled=@serviceEngineerDisabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="UpdateServiceRequestViewModel.ServiceEngineer"></label>
                    </div>
                    <div class="input-field col s4">
                        <select asp-for="UpdateServiceRequestViewModel.Status" asp-items="@(new SelectList(ViewBag.Status))" class="validate" required="required"
                                disabled=@statusDisabled>
                            <option value="">Please select one</option>
                        </select>
                        <label asp-for="UpdateServiceRequestViewModel.Status"></label>
                    </div>
                    <div class="input-field col s12 right-align">
                        <button class="btn waves-effect waves-light btnSubmit" type="submit"
                                name="action">
                            Update
                            <i class="material-icons right">send</i>
                        </button>
                    </div>
                    <div class="row col s12 right-align" asp-validation-summary="All"></div>
                </div>
            </form>
        </div>
        <div class="row"></div>
    </div>
    @await Html.PartialAsync("_ServiceRequestGrid", Model.ServiceRequestAudit, new ViewDataDictionary(ViewData)
    {
    { "SectionName", "Recent Updates" },
    { "Id", "tblAuditServiceRequests" },
    { "IsAudit", true }
    })
</div>

@* Messages Section *@
<input type="hidden" id="hdnCustomerEmail" value="@Model.UpdateServiceRequestViewModel.PartitionKey" />
<div class="row">
    <div class="col s6">
        <ul class="collection with-header">
            <li class="collection-header"><h5>Service Request Messages</h5></li>
            <li class="collection-item height-300px overflow-y messages">
                <ul id="messagesList"></ul>
                <div class="card-panel teal lighten-2 white-text noMessages hide">
                    No Messages.
                </div>
            </li>
        </ul>
        <div class="input-field col s12">
            <input type="text" id="txtMessage" />
            <label for="txtMessage">Type message here and press enter.</label>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        $(document).ready(function () {
           
            // Initialize DataTable to show list of Service Requests
            var table = $('.tblServiceRequests').DataTable({
                'pageLength': 3,
                // Number of records to be displayed per page
                'lengthMenu': [[3, 5, 10, -1], [3, 5, 10, 'All']],
                // Remove default Sorting
                'sorting': [],
                'columns': [{ "visible": false }, { "visible": false }, null, { "width": "20%" }, null, null, null, { "visible": false }]
            });
            // Set Styles for DataTable and Number of Records to be displayed dropdown
            $('.tblServiceRequests').css("width", "100%");
            $('select[name$="ServiceRequests_length"]').material_select();
            // Initialize DatePicker
            $('.datepicker').pickadate({
                selectMonths: true,
                selectYears: 15
            });
            // initialize Material Select
            $('select').material_select();
            $("select[required]").css({
                display: "block", position: 'absolute',
                visibility: 'hidden'
            })

            var connection = new signalR.HubConnectionBuilder().withUrl("/ServiceMessagesHub").build();

            connection.start().then(function () {
                
            }).catch(function (err) {
                return console.error(err.toString());
            });





            @* Need to pass Verification Token to get Request Validated for Forgery *@
            var token = $('input[type=hidden][name=__RequestVerificationToken]', document).val();
            $.ajaxSetup({
                // Disable caching of AJAX responses
                cache: false,
                headers: {
                    'RequestVerificationToken': token,
                    'ServiceRequestId': $('#UpdateServiceRequestViewModel_RowKey').val()
                }
            });

            @* Get all previous messages for the service request *@
            $.get('/ServiceRequests/ServiceRequest/ServiceRequestMessages?serviceRequestId='
                + $('#UpdateServiceRequestViewModel_RowKey').val(),
                function (data, status) {
                    
                    addMessagesToList(data);
                });

            @* Function to scroll the messages panel to latest message *@
            function scrollToLatestMessages() {
                $('.messages').animate({ scrollTop: 10000 }, 'normal');
            };

            @* Function which is used to list of messages to UI *@
            function addMessagesToList(messages) {
                if (messages.length === 0) {
                    $('.noMessages').removeClass('hide');
                }
                $.each(messages, function (index) {
                    
                    var message = messages[index];
                    displayMessage(message);
                });
                scrollToLatestMessages();
            };

            @* Function which is invoked by SignalR Hub when a new message is broadcasted *@
            connection.on("ReceiveMessage", function (message) {
                if (message.PartitionKey !== $('#UpdateServiceRequestViewModel_RowKey').val()) {
                    return;
                }
                if (message !== null) {
                    $('.noMessages').addClass('hide');
                }
                displayMessage(message);
                scrollToLatestMessages();
            });

            @* Function used to display message on UI *@
            function displayMessage(message) {
                var isCustomer = $("#hdnCustomerEmail").val() === message.FromEmail ? 'blue lighten-1' : 'teal lighten-2';
                $('#messagesList').append('<li class="card-panel ' + isCustomer + ' white-text padding-10px">' +
                    '<div class="col s12 padding-0px">' +
                    '<div class="col s8 padding-0px"><b>' + message.FromDisplayName + '</b ></div > ' +
                    '<div class="col s4 padding-0px font-size-12px right-align">' + (new Date(message.MessageDate)).toLocaleString() + '</div>' +
                    '</div><br>' + message.Message + '</li>'
                );
            };

           

            @* Function used to post message to server on keypress *@
            $('#txtMessage').keypress(function (e) {
                var key = e.which;
                if (key == 13) {
                    var message = new Object();
                    message.Message = $('#txtMessage').val();
                    message.PartitionKey = $('#UpdateServiceRequestViewModel_RowKey').val();
                    $.post('/ServiceRequests/ServiceRequest/CreateServiceRequestMessage',
                        { message: message },
                        function (data, status, xhr) {
                            if (data) {
                                message.FromEmail = data.FromEmail;
                                message.FromDisplayName = data.FromDisplayName;
                                message.MessageDate = data.MessageDate;
                                message.RowKey = data.RowKey;
                                connection.invoke("SendMessage", message).catch(function (err) {
                                    return console.error(err.toString());
                                });
                                $('.noMessages').addClass('hide');
                                $('#txtMessage').val('');
                            }
                        });
                    scrollToLatestMessages();
                }
            });
        });
    </script>
}